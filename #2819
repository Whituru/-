#1439 뒤집기
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <map>

using namespace std;

int main() {	
	ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
	int N, S, R;
	cin >> N >> S >> R;

	int Damaged[12]; 
	fill_n(Damaged, 12, 1); //1로 배열 초기화
	int tmp;
	for (int i=1; i<= S; i++) {
		cin >> tmp;
		Damaged[tmp]--; //파손 팀은 하나 감소
	}
	for (int i=1; i<= R; i++) {
		cin >> tmp;
		Damaged[tmp]++; //추가로 가져온 팀은 하나 추가 -> 가져와서 파손된 팀은 원점(양도 불가)
	}
	
	for (int i=1; i<=N; i++) {
		if(Damaged[i] == 2) { //2개 있는 팀(양도 가능) 일때
			if(Damaged[i-1] == 0) { // 왼쪽이 부족한가?
				Damaged[i-1]++; 
				Damaged[i]--;
				continue;	//왼쪽이 먼저여야 하는 이유 = 왼쪽 먼저 탐색 -> 오른쪽 주고 나면 왼쪽 줄 팀이 등장하지 않을 수 있음
			}
			else if (Damaged[i+1] == 0){ //오른쪽이 부족한가?
				Damaged[i+1]++; 
				Damaged[i]--;
			}
		}
	}
	
	int cnt=0;
	for (int i=1; i<=N; i++) {	//출전하지 못한는 팀 세기
		if (Damaged[i] == 0) {
			cnt++;
		}
	}
	cout << cnt << endl;
	return 0;
}


